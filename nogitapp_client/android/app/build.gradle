plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.wear_os"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "29.0.13599879"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
    pickFirst "lib/armeabi-v7a/libpytorch_jni.so"
    pickFirst "lib/arm64-v8a/libpytorch_jni.so"
    pickFirst "lib/x86/libpytorch_jni.so"
    pickFirst "lib/x86_64/libpytorch_jni.so"

    pickFirst "lib/armeabi-v7a/libpytorch_vision_jni.so"
    pickFirst "lib/arm64-v8a/libpytorch_vision_jni.so"
    pickFirst "lib/x86/libpytorch_vision_jni.so"
    pickFirst "lib/x86_64/libpytorch_vision_jni.so"
  }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.wear_os"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        ndk {
    abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
}

    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled false
            shrinkResources false
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
